"""Modify student FKs in related tables to use UID

Revision ID: c98d3f46b3e1
Revises: 4c6d909ec696
Create Date: 2025-04-12 20:39:18.207530

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'c98d3f46b3e1'
down_revision: Union[str, None] = '4c6d909ec696'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # --- 1. 기존 외래 키(FK) 제약 조건 먼저 삭제 ---
    #    (실제 DB에 이름이 없어도 오류 없이 다음 단계로 진행될 수 있도록 함 - 수동 정리 후 상태 가정)
    #    (만약 이 부분에서 1091 에러가 아닌 다른 에러 발생 시 알려주세요)
    try:
        op.drop_constraint('drowsiness_level_ibfk_1', 'drowsiness_level', type_='foreignkey')
    except Exception as e:
        print(f"Ignoring error dropping drowsiness_level_ibfk_1 (likely already gone): {e}")
    try:
        op.drop_constraint('enrollment_ibfk_2', 'enrollment', type_='foreignkey')
    except Exception as e:
        print(f"Ignoring error dropping enrollment_ibfk_2 (likely already gone): {e}")
    try:
        op.drop_constraint('watch_history_ibfk_1', 'watch_history', type_='foreignkey')
    except Exception as e:
        print(f"Ignoring error dropping watch_history_ibfk_1 (likely already gone): {e}")
    # ---------------------------------------------

    # --- 2. student 테이블 수정 ---
    op.add_column('student', sa.Column('uid', sa.String(length=128), nullable=False))
    op.alter_column('student', 'name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.drop_column('student', 'password')
    # 이제 FK가 없으므로 id 컬럼 삭제 가능
    op.drop_column('student', 'id')
    # uid 컬럼에 PK 제약조건 추가
    op.create_primary_key('PRIMARY', 'student', ['uid'])
    # 인덱스 생성
    op.create_index(op.f('ix_student_email'), 'student', ['email'], unique=True)
    op.create_index(op.f('ix_student_uid'), 'student', ['uid'], unique=True) # PK 이므로 unique=True
    # ---------------------------------------------

    # --- 3. 관련 테이블 컬럼 수정 및 새 FK 생성 ---
    # Drowsiness Level
    op.add_column('drowsiness_level', sa.Column('student_uid', sa.String(length=128), nullable=False))
    # 새 FK 생성 (student.uid 참조)
    op.create_foreign_key('fk_drowsiness_level_student_uid', 'drowsiness_level', 'student', ['student_uid'], ['uid'])
    # 기존 컬럼 삭제
    op.drop_column('drowsiness_level', 'student_id')

    # Enrollment
    op.add_column('enrollment', sa.Column('student_uid', sa.String(length=128), nullable=False))
    # 새 FK 생성 (student.uid 참조)
    op.create_foreign_key('fk_enrollment_student_uid', 'enrollment', 'student', ['student_uid'], ['uid'])
    # 기존 컬럼 삭제
    op.drop_column('enrollment', 'student_id')

    # Watch History
    op.add_column('watch_history', sa.Column('student_uid', sa.String(length=128), nullable=False))
    # 새 FK 생성 (student.uid 참조)
    op.create_foreign_key('fk_watch_history_student_uid', 'watch_history', 'student', ['student_uid'], ['uid'])
    # 기존 컬럼 삭제
    op.drop_column('watch_history', 'student_id')
    # ---------------------------------------------

    # --- 4. 잘못된 'students' 테이블 관련 명령은 제거됨 ---
    # ---------------------------------------------

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # --- 1. 관련 테이블 컬럼 복구 및 새 FK 삭제 (upgrade의 역순) ---
    # Watch History
    op.add_column('watch_history', sa.Column('student_id', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint('fk_watch_history_student_uid', 'watch_history', type_='foreignkey')
    op.drop_column('watch_history', 'student_uid')

    # Enrollment
    op.add_column('enrollment', sa.Column('student_id', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint('fk_enrollment_student_uid', 'enrollment', type_='foreignkey')
    op.drop_column('enrollment', 'student_uid')

    # Drowsiness Level
    op.add_column('drowsiness_level', sa.Column('student_id', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint('fk_drowsiness_level_student_uid', 'drowsiness_level', type_='foreignkey')
    op.drop_column('drowsiness_level', 'student_uid')
    # ---------------------------------------------

    # --- 2. student 테이블 복구 (upgrade의 역순) ---
    # 인덱스 삭제
    op.drop_index(op.f('ix_student_uid'), table_name='student')
    op.drop_index(op.f('ix_student_email'), table_name='student')
    # PK 제약조건 삭제 (uid에 대한 것)
    op.drop_constraint('PRIMARY', 'student', type_='primary')
    # 컬럼 복구 및 수정 (id 컬럼 복구 먼저)
    op.add_column('student', sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('student', sa.Column('password', mysql.VARCHAR(length=255), nullable=False))
    op.alter_column('student', 'name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.drop_column('student', 'uid')
    # id 컬럼에 PK 제약조건 다시 추가
    op.create_primary_key('PRIMARY', 'student', ['id'])
    # ---------------------------------------------

    # --- 3. 기존 외래 키(FK) 제약 조건 복구 (student.id 복구 후) ---
    op.create_foreign_key('drowsiness_level_ibfk_1', 'drowsiness_level', 'student', ['student_id'], ['id'])
    op.create_foreign_key('enrollment_ibfk_2', 'enrollment', 'student', ['student_id'], ['id'])
    op.create_foreign_key('watch_history_ibfk_1', 'watch_history', 'student', ['student_id'], ['id'])
    # ---------------------------------------------

    # --- 4. 잘못된 'students' 테이블 관련 명령은 제거됨 ---
    # ---------------------------------------------

    # ### end Alembic commands ###